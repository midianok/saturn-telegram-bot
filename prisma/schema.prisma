datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:mysecretpassword@localhost:5432/saturn?schema=public"
}

generator client {
  provider = "prisma-client-js"
}

model EFMigrationsHistory {
  migration_id    String @id(map: "pk___ef_migrations_history") @db.VarChar(150)
  product_version String @db.VarChar(32)

  @@map("__EFMigrationsHistory")
}

model ai_agents {
  id     String  @id(map: "pk_ai_agents") @db.Uuid
  name   String  @db.VarChar(128)
  code   String  @unique(map: "ix_ai_agents_code") @db.VarChar(128)
  prompt String
  chats  chats[]
}

model chats {
  id          BigInt     @id(map: "pk_chats") @default(autoincrement())
  type        Int
  name        String?
  ai_agent_id String?    @db.Uuid
  ai_agents   ai_agents? @relation(fields: [ai_agent_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_chats_ai_agents_ai_agent_id")
  messages    messages[]

  @@index([ai_agent_id], map: "ix_chats_ai_agent_id")
}

model messages {
  id                       BigInt
  chat_id                  BigInt
  user_id                  BigInt
  type                     Int
  text                     String?  @db.VarChar(4096)
  sticker_id               String?  @db.VarChar(256)
  message_date             DateTime @db.Timestamptz(6)
  reply_to_message_chat_id BigInt?
  reply_to_message_id      BigInt?
  chats                    chats    @relation(fields: [chat_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_messages_chats_chat_id")
  users                    users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_messages_users_user_id")

  @@id([id, chat_id], map: "pk_messages")
  @@index([chat_id], map: "ix_messages_chat_id")
  @@index([user_id, chat_id], map: "ix_messages_user_id_chat_id")
}

model users {
  id         BigInt     @id(map: "pk_users") @default(autoincrement())
  username   String?
  first_name String?
  last_name  String?
  messages   messages[]
}
